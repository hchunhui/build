diff --git a/CMakeLists.txt b/CMakeLists.txt
index 72bb553..620d698 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -18,16 +18,20 @@ if (LIBNOTIFY_FOUND)
   link_directories(${LIBNOTIFY_LIBRARY_DIRS})
 endif(LIBNOTIFY_FOUND)
 
-find_package(Rime REQUIRED)
-if(Rime_FOUND)
-  include_directories(${Rime_INCLUDE_DIR})
-endif(Rime_FOUND)
-
-if(NOT DEFINED RIME_DATA_DIR)
-  find_package(RimeData REQUIRED)
-endif(NOT DEFINED RIME_DATA_DIR)
-message(STATUS "Precompiler macro RIME_DATA_DIR is set to \"${RIME_DATA_DIR}\"")
-add_definitions(-DRIME_DATA_DIR="${RIME_DATA_DIR}")
+#find_package(Rime REQUIRED)
+#if(Rime_FOUND)
+#  include_directories(${Rime_INCLUDE_DIR})
+#endif(Rime_FOUND)
+include_directories(${PROJECT_SOURCE_DIR}/../librime/src)
+link_directories(${PROJECT_SOURCE_DIR}/../librime/build/lib)
+set(Rime_LIBRARIES rime)
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=gnu99")
+
+#if(NOT DEFINED RIME_DATA_DIR)
+#  find_package(RimeData REQUIRED)
+#endif(NOT DEFINED RIME_DATA_DIR)
+#message(STATUS "Precompiler macro RIME_DATA_DIR is set to \"${RIME_DATA_DIR}\"")
+#add_definitions(-DRIME_DATA_DIR="${RIME_DATA_DIR}")
 
 set(RIME_DEPS "dl")
 
diff --git a/rime_config.h b/rime_config.h
index 1a83488..514447c 100644
--- a/rime_config.h
+++ b/rime_config.h
@@ -3,8 +3,8 @@
 
 #define RIME_VERSION "1.4.0"
 
-#define IBUS_RIME_INSTALL_PREFIX "/usr"
-#define IBUS_RIME_SHARED_DATA_DIR IBUS_RIME_INSTALL_PREFIX "/share/rime-data"
-#define IBUS_RIME_ICONS_DIR IBUS_RIME_INSTALL_PREFIX "/share/ibus-rime/icons"
+#define IBUS_RIME_INSTALL_PREFIX ""
+#define IBUS_RIME_SHARED_DATA_DIR IBUS_RIME_INSTALL_PREFIX "share/rime-data"
+#define IBUS_RIME_ICONS_DIR IBUS_RIME_INSTALL_PREFIX "share/ibus-rime/icons"
 
 #endif  // RIME_CONFIG_H_
diff --git a/rime_engine.c b/rime_engine.c
index 1348c70..f8343df 100644
--- a/rime_engine.c
+++ b/rime_engine.c
@@ -110,42 +110,50 @@ ibus_rime_engine_init (IBusRimeEngine *rime_engine)
   IBusProperty* prop;
   IBusText* label;
   IBusText* tips;
+  gchar *cwd = g_get_current_dir(); 
+  gchar *icon = g_strdup_printf("%s/%s", cwd, IBUS_RIME_ICONS_DIR "/zh.png");
   label = ibus_text_new_from_static_string("中文");
   tips = ibus_text_new_from_static_string("中 ↔ A");
   prop = ibus_property_new("InputMode",
                            PROP_TYPE_NORMAL,
                            label,
-                           IBUS_RIME_ICONS_DIR "/zh.png",
+                           icon,
                            tips,
                            TRUE,
                            TRUE,
                            PROP_STATE_UNCHECKED,
                            NULL);
   ibus_prop_list_append(rime_engine->props, prop);
+  g_free(icon);
+  icon = g_strdup_printf("%s/%s", cwd, IBUS_RIME_ICONS_DIR "/reload.png");
   label = ibus_text_new_from_static_string("部署");
   tips = ibus_text_new_from_static_string(_("Deploy"));
   prop = ibus_property_new("deploy",
                            PROP_TYPE_NORMAL,
                            label,
-                           IBUS_RIME_ICONS_DIR "/reload.png",
+                           icon,
                            tips,
                            TRUE,
                            TRUE,
                            PROP_STATE_UNCHECKED,
                            NULL);
   ibus_prop_list_append(rime_engine->props, prop);
+  g_free(icon);
+  icon = g_strdup_printf("%s/%s", cwd, IBUS_RIME_ICONS_DIR "/sync.png");
   label = ibus_text_new_from_static_string("同步");
   tips = ibus_text_new_from_static_string(_("Sync data"));
   prop = ibus_property_new("sync",
                            PROP_TYPE_NORMAL,
                            label,
-                           IBUS_RIME_ICONS_DIR "/sync.png",
+                           icon,
                            tips,
                            TRUE,
                            TRUE,
                            PROP_STATE_UNCHECKED,
                            NULL);
   ibus_prop_list_append(rime_engine->props, prop);
+  g_free(icon);
+  g_free(cwd);
 }
 
 static void
@@ -235,19 +243,20 @@ static void ibus_rime_update_status(IBusRimeEngine *rime_engine,
       status && status->schema_id ? g_strdup(status->schema_id) : NULL;
 
   IBusProperty* prop = ibus_prop_list_get(rime_engine->props, 0);
-  const gchar* icon;
+  gchar *cwd = g_get_current_dir();
+  gchar* icon = NULL;
   IBusText* label;
   if (prop) {
     if (!status || status->is_disabled) {
-      icon = IBUS_RIME_ICONS_DIR "/disabled.png";
+      icon = g_strdup_printf("%s/%s", cwd, IBUS_RIME_ICONS_DIR "/disabled.png");
       label = ibus_text_new_from_static_string("維護");
     }
     else if (status->is_ascii_mode) {
-      icon = IBUS_RIME_ICONS_DIR "/abc.png";
+      icon = g_strdup_printf("%s/%s", cwd, IBUS_RIME_ICONS_DIR "/abc.png");
       label = ibus_text_new_from_static_string("Abc");
     }
     else {
-      icon = IBUS_RIME_ICONS_DIR "/zh.png";
+      icon = g_strdup_printf("%s/%s", cwd, IBUS_RIME_ICONS_DIR "/zh.png");
       /* schema_name is ".default" in switcher */
       if (status->schema_name && status->schema_name[0] != '.') {
         label = ibus_text_new_from_string(status->schema_name);
@@ -265,6 +274,8 @@ static void ibus_rime_update_status(IBusRimeEngine *rime_engine,
     ibus_property_set_label(prop, label);
     ibus_engine_update_property((IBusEngine *)rime_engine, prop);
   }
+  g_free(cwd);
+  g_free(icon);
 }
 
 static void ibus_rime_engine_update(IBusRimeEngine *rime_engine)
@@ -347,16 +358,19 @@ static void ibus_rime_engine_update(IBusRimeEngine *rime_engine)
     glong cursor_pos =
         g_utf8_strlen(preedit, context.composition.cursor_pos - offset);
     text->attrs = ibus_attr_list_new();
+    glong start = g_utf8_strlen(
+        preedit,context.composition.sel_start - offset);
+    glong end = g_utf8_strlen(preedit, context.composition.sel_end - offset);
+    ibus_attr_list_append(
+        text->attrs,
+        ibus_attr_foreground_new(0x0063c8, 0, start));
+    ibus_attr_list_append(
+        text->attrs,
+        ibus_attr_foreground_new(0xff0084, start, preedit_len));
     if (highlighting) {
-      glong start = g_utf8_strlen(
-          preedit,context.composition.sel_start - offset);
-      glong end = g_utf8_strlen(preedit, context.composition.sel_end - offset);
-      ibus_attr_list_append(
-          text->attrs,
-          ibus_attr_foreground_new(RIME_COLOR_BLACK, start, end));
       ibus_attr_list_append(
           text->attrs,
-          ibus_attr_background_new(RIME_COLOR_LIGHT, start, end));
+          ibus_attr_background_new(0xeeeeec, start, end));
     }
   }
 
@@ -399,20 +413,27 @@ static void ibus_rime_engine_update(IBusRimeEngine *rime_engine)
       gchar* text = context.menu.candidates[i].text;
       gchar* comment = context.menu.candidates[i].comment;
       IBusText *cand_text = NULL;
+      int text_len = g_utf8_strlen(text, -1);
+
       if (comment) {
         gchar* temp = g_strconcat(text, " ", comment, NULL);
         cand_text = ibus_text_new_from_string(temp);
         g_free(temp);
-        int text_len = g_utf8_strlen(text, -1);
         int end_index = ibus_text_get_length(cand_text);
         ibus_text_append_attribute(cand_text,
                                    IBUS_ATTR_TYPE_FOREGROUND,
-                                   RIME_COLOR_DARK,
+                                   0xff0084,
                                    text_len, end_index);
       }
       else {
         cand_text = ibus_text_new_from_string(text);
       }
+
+      ibus_text_append_attribute(cand_text,
+                                 IBUS_ATTR_TYPE_FOREGROUND,
+                                 0x0063c8,
+                                 0, text_len);
+
       ibus_lookup_table_append_candidate(rime_engine->table, cand_text);
       IBusText *label = NULL;
       if (i < context.menu.page_size && has_labels) {
@@ -424,6 +445,11 @@ static void ibus_rime_engine_update(IBusRimeEngine *rime_engine)
       else {
         label = ibus_text_new_from_printf("%d", (i + 1) % 10);
       }
+      int label_len = g_utf8_strlen(ibus_text_get_text(label), -1);
+      ibus_text_append_attribute(label,
+                                 IBUS_ATTR_TYPE_FOREGROUND,
+                                 0x0063c8,
+                                 0, label_len);
       ibus_lookup_table_set_label(rime_engine->table, i, label);
     }
     if (has_page_down) { //show page down except last page
diff --git a/rime_settings.h b/rime_settings.h
index 026245c..e71a21d 100644
--- a/rime_settings.h
+++ b/rime_settings.h
@@ -4,9 +4,6 @@
 #include <ibus.h>
 
 // colors
-#define RIME_COLOR_LIGHT  0xd4d4d4
-#define RIME_COLOR_DARK   0x606060
-#define RIME_COLOR_BLACK  0x000000
 
 struct ColorSchemeDefinition {
   const char* color_scheme_id;
